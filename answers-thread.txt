1. 为什么thread只需要保存/恢复被调用者保存的寄存器。
    在函数调用约定中，寄存器分为两类：

    调用者保存寄存器（caller-save）：调用函数前由调用者负责保存被调用者保存寄存器（callee-save）：被调用函数负责保存和恢复
    thread_switch只需要保存被调用者保存的寄存器，因为：

    1 调用者保存的寄存器在调用thread_switch之前已经被调用者处理了
    2 线程切换时，我们需要保存的是那些跨函数调用仍需保持的寄存器状态

2.为什么1个线程没问题？为什么2个线程有问题？
    1个线程
    单线程执行是顺序的，没有并发访问，每个操作都能完整执行，不会被中断

    2个线程
    多线程并发访问同一个数据结构，存在竞态条件（race condition）